<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ander.blend.sqlTrain.dao.JobsMapper">
  <resultMap id="BaseResultMap" type="com.ander.blend.sqlTrain.domain.Jobs">
    <id column="JOB_ID" jdbcType="INTEGER" property="jobId" />
    <result column="JOB_TITLE" jdbcType="VARCHAR" property="jobTitle" />
    <result column="MIN_SALARY" jdbcType="INTEGER" property="minSalary" />
    <result column="MAX_SALARY" jdbcType="INTEGER" property="maxSalary" />
  </resultMap>
  <sql id="Base_Column_List">
    JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jobs
    where JOB_ID = #{jobId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jobs
    where JOB_ID = #{jobId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ander.blend.sqlTrain.domain.Jobs">
    insert into jobs (JOB_ID, JOB_TITLE, MIN_SALARY, 
      MAX_SALARY)
    values (#{jobId,jdbcType=INTEGER}, #{jobTitle,jdbcType=VARCHAR}, #{minSalary,jdbcType=INTEGER}, 
      #{maxSalary,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ander.blend.sqlTrain.domain.Jobs">
    insert into jobs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        JOB_ID,
      </if>
      <if test="jobTitle != null">
        JOB_TITLE,
      </if>
      <if test="minSalary != null">
        MIN_SALARY,
      </if>
      <if test="maxSalary != null">
        MAX_SALARY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobTitle != null">
        #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="minSalary != null">
        #{minSalary,jdbcType=INTEGER},
      </if>
      <if test="maxSalary != null">
        #{maxSalary,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ander.blend.sqlTrain.domain.Jobs">
    update jobs
    <set>
      <if test="jobTitle != null">
        JOB_TITLE = #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="minSalary != null">
        MIN_SALARY = #{minSalary,jdbcType=INTEGER},
      </if>
      <if test="maxSalary != null">
        MAX_SALARY = #{maxSalary,jdbcType=INTEGER},
      </if>
    </set>
    where JOB_ID = #{jobId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ander.blend.sqlTrain.domain.Jobs">
    update jobs
    set JOB_TITLE = #{jobTitle,jdbcType=VARCHAR},
      MIN_SALARY = #{minSalary,jdbcType=INTEGER},
      MAX_SALARY = #{maxSalary,jdbcType=INTEGER}
    where JOB_ID = #{jobId,jdbcType=INTEGER}
  </update>
</mapper>