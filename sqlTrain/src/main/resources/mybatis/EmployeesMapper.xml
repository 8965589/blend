<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ander.blend.sqlTrain.dao.EmployeesMapper">
  <resultMap id="BaseResultMap" type="com.ander.blend.sqlTrain.domain.Employees">
    <id column="EMPLOYEE_ID" jdbcType="INTEGER" property="employeeId" />
    <result column="FIRST_NAME" jdbcType="VARCHAR" property="firstName" />
    <result column="LAST_NAME" jdbcType="VARCHAR" property="lastName" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="PHONE_NUMBER" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="HIRE_DATE" jdbcType="DATE" property="hireDate" />
    <result column="JOB_ID" jdbcType="VARCHAR" property="jobId" />
    <result column="SALARY" jdbcType="INTEGER" property="salary" />
    <result column="COMMISSION_PCT" jdbcType="INTEGER" property="commissionPct" />
    <result column="MANAGER_ID" jdbcType="INTEGER" property="managerId" />
    <result column="DEPARTMENT_ID" jdbcType="INTEGER" property="departmentId" />
  </resultMap>
  <sql id="Base_Column_List">
    EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, 
    COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employees
    where EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employees
    where EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ander.blend.sqlTrain.domain.Employees">
    insert into employees (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, 
      EMAIL, PHONE_NUMBER, HIRE_DATE, 
      JOB_ID, SALARY, COMMISSION_PCT, 
      MANAGER_ID, DEPARTMENT_ID)
    values (#{employeeId,jdbcType=INTEGER}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{hireDate,jdbcType=DATE}, 
      #{jobId,jdbcType=VARCHAR}, #{salary,jdbcType=INTEGER}, #{commissionPct,jdbcType=INTEGER}, 
      #{managerId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ander.blend.sqlTrain.domain.Employees">
    insert into employees
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        EMPLOYEE_ID,
      </if>
      <if test="firstName != null">
        FIRST_NAME,
      </if>
      <if test="lastName != null">
        LAST_NAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="phoneNumber != null">
        PHONE_NUMBER,
      </if>
      <if test="hireDate != null">
        HIRE_DATE,
      </if>
      <if test="jobId != null">
        JOB_ID,
      </if>
      <if test="salary != null">
        SALARY,
      </if>
      <if test="commissionPct != null">
        COMMISSION_PCT,
      </if>
      <if test="managerId != null">
        MANAGER_ID,
      </if>
      <if test="departmentId != null">
        DEPARTMENT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="hireDate != null">
        #{hireDate,jdbcType=DATE},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="commissionPct != null">
        #{commissionPct,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ander.blend.sqlTrain.domain.Employees">
    update employees
    <set>
      <if test="firstName != null">
        FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        LAST_NAME = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        PHONE_NUMBER = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="hireDate != null">
        HIRE_DATE = #{hireDate,jdbcType=DATE},
      </if>
      <if test="jobId != null">
        JOB_ID = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        SALARY = #{salary,jdbcType=INTEGER},
      </if>
      <if test="commissionPct != null">
        COMMISSION_PCT = #{commissionPct,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        MANAGER_ID = #{managerId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        DEPARTMENT_ID = #{departmentId,jdbcType=INTEGER},
      </if>
    </set>
    where EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ander.blend.sqlTrain.domain.Employees">
    update employees
    set FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      LAST_NAME = #{lastName,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      PHONE_NUMBER = #{phoneNumber,jdbcType=VARCHAR},
      HIRE_DATE = #{hireDate,jdbcType=DATE},
      JOB_ID = #{jobId,jdbcType=VARCHAR},
      SALARY = #{salary,jdbcType=INTEGER},
      COMMISSION_PCT = #{commissionPct,jdbcType=INTEGER},
      MANAGER_ID = #{managerId,jdbcType=INTEGER},
      DEPARTMENT_ID = #{departmentId,jdbcType=INTEGER}
    where EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER}
  </update>
</mapper>